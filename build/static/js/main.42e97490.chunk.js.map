{"version":3,"sources":["index.js"],"names":["App","ref","useRef","useState","items","set","transitions","useTransition","from","opacity","height","innerHeight","transform","color","enter","leave","update","reset","useCallback","current","map","clearTimeout","push","setTimeout","useEffect","item","props","rest","key","div","className","style","onClick","overflow","render","document","getElementById"],"mappings":"4NAOA,SAASA,IACP,IAAMC,EAAMC,iBAAO,IADN,EAEQC,mBAAS,IAFjB,mBAENC,EAFM,KAECC,EAFD,KAGPC,EAAcC,YAAcH,EAAO,KAAM,CAC7CI,KAAM,CAAEC,QAAS,EAAGC,OAAQ,EAAGC,YAAa,EAAGC,UAAW,mCAAoCC,MAAO,WACrGC,MAAO,CACL,CAAEL,QAAS,EAAGC,OAAQ,GAAIC,YAAa,IACvC,CAAEC,UAAW,qCAAsCC,MAAO,WAC1D,CAAED,UAAW,qCAEfG,MAAO,CAAC,CAAEF,MAAO,WAAa,CAAEF,YAAa,GAAK,CAAEF,QAAS,EAAGC,OAAQ,IACxEM,OAAQ,CAAEH,MAAO,aAGbI,EAAQC,uBAAY,WACxBjB,EAAIkB,QAAQC,IAAIC,cAChBpB,EAAIkB,QAAU,GACdd,EAAI,IACJJ,EAAIkB,QAAQG,KAAKC,YAAW,kBAAMlB,EAAI,CAAC,WAAY,KAAM,UAAS,MAClEJ,EAAIkB,QAAQG,KAAKC,YAAW,kBAAMlB,EAAI,CAAC,aAAc,WAAU,MAC/DJ,EAAIkB,QAAQG,KAAKC,YAAW,kBAAMlB,EAAI,CAAC,YAAa,kBAAmB,mBAAkB,QACxF,IAIH,OAFAmB,qBAAU,WAAWP,MAAS,IAG5B,6BACE,kEACCX,EAAYc,KAAI,gBAAGK,EAAH,EAAGA,KAAH,IAASC,MAASf,EAAlB,EAAkBA,YAAgBgB,EAAlC,+BAA0CC,EAA1C,EAA0CA,IAA1C,OACf,kBAAC,IAASC,IAAV,CAAcC,UAAU,mBAAmBF,IAAKA,EAAKG,MAAOJ,EAAMK,QAASf,GACzE,kBAAC,IAASY,IAAV,CAAcE,MAAO,CAAEE,SAAU,SAAUvB,OAAQC,IAAgBc,QAO7ES,iBAAO,kBAAClC,EAAD,MAASmC,SAASC,eAAe,W","file":"static/js/main.42e97490.chunk.js","sourcesContent":["import React, { useRef, useState, useEffect, useCallback } from 'react'\nimport { render } from 'react-dom'\nimport { useTransition, animated } from 'react-spring'\nimport Instant from '0x-instant-component'\nimport './styles.css'\n\n\nfunction App() {\n  const ref = useRef([])\n  const [items, set] = useState([])\n  const transitions = useTransition(items, null, {\n    from: { opacity: 0, height: 0, innerHeight: 0, transform: 'perspective(600px) rotateX(0deg)', color: '#8fa5b6' },\n    enter: [\n      { opacity: 1, height: 80, innerHeight: 80 },\n      { transform: 'perspective(600px) rotateX(180deg)', color: '#28d79f' },\n      { transform: 'perspective(600px) rotateX(0deg)' },\n    ],\n    leave: [{ color: '#c23369' }, { innerHeight: 0 }, { opacity: 0, height: 0 }],\n    update: { color: '#28b4d7' },\n  })\n\n  const reset = useCallback(() => {\n    ref.current.map(clearTimeout)\n    ref.current = []\n    set([])\n    ref.current.push(setTimeout(() => set(['Ethereum', '0x', 'DAI']), 2000))\n    ref.current.push(setTimeout(() => set(['Blockchain', 'DeFi']), 5000))\n    ref.current.push(setTimeout(() => set(['Ownership', 'Smart-Contracts', 'Private Keys']), 8000))\n  }, [])\n\n  useEffect(() => void reset(), [])\n\n  return (   \n    <div>\n      <h4>Refresh Page to get back to wallet</h4>\n      {transitions.map(({ item, props: { innerHeight, ...rest }, key }) => (\n        <animated.div className=\"transitions-item\" key={key} style={rest} onClick={reset}>\n          <animated.div style={{ overflow: 'hidden', height: innerHeight }}>{item}</animated.div>\n        </animated.div>\n      ))}\n    </div>\n  )\n}\n\nrender(<App />, document.getElementById('root'))\n"],"sourceRoot":""}